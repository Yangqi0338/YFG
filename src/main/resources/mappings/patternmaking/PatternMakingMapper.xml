<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.sbc.module.patternmaking.mapper.PatternMakingMapper">
    <!--
        打版管理
        创建人：lxl
        邮箱：lxl.fml@gmail.com
        创建时间：2023-5-29 13:33:05
        版本号：1.0
      -->

    <!-- ***********************自定义方法区 不替换的区域【other_start】***************************************** -->


    <!-- ***********************自定义方法区 不替换的区域【other_end】******************************************** -->
    <select id="technologyCenterTaskList"
            resultType="com.base.sbc.module.patternmaking.vo.TechnologyCenterTaskVo">
        SELECT
        p.id,
        s.design_no,
        s.style_pic,
        s.prod_category1st_name,
        s.prod_category_name,
        s.prod_category2nd_name,
        s.prod_category3rd_name,
        s.prod_category1st,
        s.prod_category,
        s.prod_category2nd,
        s.prod_category3rd,
        s.brand,
        s.brand_name,
        s.year,
        s.year_name,
        s.month,
        s.month_name,
        s.season,
        s.season_name,
        s.band_code,
        s.band_name,
        s.style_name,
        s.designer,
        p.design_send_date,
        p.prm_send_date,
        p.prm_send_status,
        p.urgency,
        p.urgency_name,
        p.planning_season_id,
        p.pattern_design_id,
        p.break_off_sample,
        p.break_off_pattern,
        p.pattern_design_name,
        s.pattern_design_name as `firstPatternDesignName`,
        p.color_name,
        p.color_code,
        p.pattern_room,
        p.pattern_room_id,
        p.sample_type_name,
        p.pattern_making_score,
        p.demand_finish_date,
        p.node,
        p.status as `pmStatus`,
        p.pattern_req_date,
        p.revision_comments
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id and p.design_send_status='1'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
    <select id="getPatternDesignSampleTypeCount"
            resultType="com.base.sbc.module.patternmaking.vo.PatternDesignSampleTypeQtyVo">
        SELECT
        pattern_design_id ,sample_type ,count(id) as quantity
        FROM
        `t_pattern_making`
        WHERE

        del_flag =0
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        group by pattern_design_id ,sample_type

    </select>
    <select id="patternMakingTaskList"
            resultType="com.base.sbc.module.patternmaking.vo.PatternMakingTaskListVo">
        SELECT
        p.id,
        s.design_no,
        s.style_pic,
        s.prod_category1st_name,
        s.prod_category_name,
        s.prod_category2nd_name,
        s.prod_category3rd_name,
        s.brand,
        s.year,
        s.month,
        s.season,
        s.band_code,
        s.style_name,
        s.designer,
        s.designer_id,
        p.code,
        p.sample_type,
        p.design_send_date,
        p.prm_send_date,
        p.prm_send_status,
        p.urgency,
        p.urgency_name,
        p.node,
        p.status,
        p.sgl_kitting,
        p.technician_kitting,
        p.sort,
        p.suspend,
        p.suspend_remarks,
        p.suspend_status,
        p.planning_season_id,
        p.pattern_design_id,
        p.stitcher,
        p.stitcher_id,
        p.cutter_name,
        p.cutter_id,
        p.break_off_sample,
        p.break_off_pattern,
        p.update_date,
        p.pattern_design_name,
        p.sample_making_score,
        p.pattern_making_score,
        p.pat_seq,
        p.grading_id,
        p.grading_name,
        p.stitcher_remark,
        p.sample_bar_code,
        p.grading_date
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id
        and p.design_send_status='1'
        and p.prm_send_status='1'
        and p.del_flag &lt;&gt; '1'
        and s.del_flag &lt;&gt; '1'

        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>


    </select>
    <select id="sampleBoardList" resultType="com.base.sbc.module.patternmaking.vo.SampleBoardVo">
        SELECT
        p.id AS patternMakingId,
        p.pattern_design_name ,
        p.pattern_design_id ,
        p.pat_diff,p.pat_diff_name,
        s.*,
        p.*,
        p.status pmStatus,
        p.create_date as `pmCreateDate`,
        p.demand_finish_date as demandFinishDate
        FROM
        t_style s
        LEFT JOIN t_pattern_making p ON ( s.id = p.style_id )
        where
        p.del_flag = '0'
        and s.del_flag = '0'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
    <select id="getAllPatternDesignList" resultType="com.base.sbc.module.sample.vo.SampleUserVo">
        select DISTINCT pattern_design_id as user_id, pattern_design_name as name
        from t_pattern_making s
        where company_code = #{companyCode}
          and pattern_design_id is not null
          and s.del_flag = '0'
    </select>
    <select id="workPatternMakingSteps" resultType="java.util.Map">
        select  id,code,pattern_no as patternNo,pattern_design_name as patternDesignName,pattern_designer_name AS patternDesignerName
        from t_pattern_making ${ew.customSqlSegment}
    </select>
    <select id="nsCount" resultType="java.util.Map">
        select CONCAT(node, '-', status) as nodeStatus, count(1) as total
        from t_pattern_making ${ew.customSqlSegment}
        group by node, status

    </select>
    <select id="findBySampleDesignId" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingListVo">
        select m.*, d.product_sizes, d.pat_diff as sd_pat_diff, d.pat_diff_name as sd_pat_diff_name, d.default_size
        from t_pattern_making m
                 join t_style d on (m.style_id = d.id) ${ew.customSqlSegment}
    </select>

    <select id="getAllList" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingForSampleVo">
        SELECT pk.id,
               pk.`code`,
               pk.sample_type,
               sd.style_name,
               sd.design_no,
               sd.prod_category_name as categoryName,
               sd.prod_category      as categoryCode,
               ps.id                 AS seasonId,
               ps.season,
               ps.season_name,
               sd.designer,
               sd.designer_id,
               sd.pattern_design_id,
               sd.pattern_design_name,
               pk.style_id
        FROM t_pattern_making pk
                 JOIN t_style sd ON sd.id = pk.style_id
                 JOIN t_planning_season ps ON ps.id = pk.planning_season_id
            ${ew.customSqlSegment}
    </select>

    <select id="versionComparisonViewWeekMonth" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            *
        FROM
            (
            SELECT
                pk.sample_type,
                DATE_FORMAT( pk.create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
                min( pk.create_date ) AS min_date,
                count( 1 ) AS num
            FROM t_pattern_making pk
            JOIN t_style sd ON sd.id = pk.style_id
            WHERE
                pk.del_flag = '0'
                AND pk.sample_type = '初版样'
                AND pk.company_code = #{companyCode}
                AND pk.create_date BETWEEN #{startTime} AND #{endTime}
            <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY
                DATE_FORMAT( pk.create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
            ORDER BY
                year_week ASC
            )
        AS pmc
        UNION
        SELECT
            *
        FROM
            (
            SELECT
                pk.sample_type,
                DATE_FORMAT( pk.create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
                min( pk.create_date ) AS min_date,
                count( 1 ) AS num
            FROM t_pattern_making pk
            JOIN t_style sd ON sd.id = pk.style_id
            WHERE
                pk.del_flag = '0'
                AND pk.sample_type = '改版样'
                AND pk.company_code = #{companyCode}
                AND pk.create_date BETWEEN #{startTime} AND #{endTime}
            <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY
                DATE_FORMAT( pk.create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
            ORDER BY
                year_week ASC
            )
        AS pmg
    </select>

    <select id="categorySummaryCount" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            #{sampleType} AS sample_type,
            DATE_FORMAT( pmm.create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
        min( pmm.create_date ) AS min_date,
        count( 1 ) AS num,
        SUM( pmm.requirement_num ) AS requirement_num_sum
        FROM
        (
        SELECT
        sd.planning_category_id,
        pm.*
        FROM
        t_pattern_making pm
        LEFT JOIN t_style sd ON pm.style_id = sd.id
        LEFT JOIN t_planning_category_item pc ON sd.planning_category_id = pc.id
        WHERE
        pm.node = '打版任务'
        AND pm.company_code = #{companyCode}
        AND pm.create_date BETWEEN #{startTime} AND #{endTime}
        <if test="null != statusList and statusList.size() > 0">
                    AND pm.`status` IN
                    <foreach collection="statusList" item="status" separator="," open="(" close=")">
                        #{status}
                    </foreach>
                </if>
        <if test="null != categoryIds and categoryIds.size() > 0">
            AND pc.prod_category in
            <foreach collection="categoryIds" item="categoryId" separator="," open="(" close=")">
                #{categoryId}
            </foreach>
        </if>
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
            ) pmm
        GROUP BY
            DATE_FORMAT( pmm.create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
        ORDER BY
            year_week ASC;


    </select>

    <select id="sampleCapacityTotalCount" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
        ns.`status`,
		DATE_FORMAT( ns.start_date, IF(#{dto.weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
		min( ns.start_date ) AS min_date,
		count( 1 ) AS num
        FROM
             t_node_status ns
        LEFT JOIN t_pattern_making pm on ns.data_id = pm.id
        LEFT JOIN t_style s on pm.style_id = s.id
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{dto.companyCode}
            AND ns.node = '样衣任务'
            <if test="null != dto.statusList and dto.statusList.size() > 0">
                AND ns.`status` IN
                <foreach collection="dto.statusList" item="status" separator="," open="(" close=")">
                    #{status}
                </foreach>
            </if>
            AND ns.start_date BETWEEN #{dto.startTime} AND #{dto.endTime}
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        GROUP BY
            ns.`status`,DATE_FORMAT( ns.start_date, IF(#{dto.weeklyMonth} = 'week','%y%u', '%y%m') )
        ORDER BY
            year_week ASC ;
    </select>
    <!-- 产能对比 》打版需求 -->
    <select id="capacityContrastDemandStatistics" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            DATE_FORMAT( pm.create_date, IF ( #{dto.weeklyMonth} = 'week', '%y年%u周', '%y年%m月' ) ) AS year_week,
            sum( pm.requirement_num ) as requirement_num_sum
        FROM
            (SELECT pm.* FROM t_pattern_making pm
                INNER JOIN t_node_status ns on ns.data_id = pm.id AND ns.node = #{dto.node} WHERE pm.del_flag = '0' GROUP BY pm.id) AS pm
        LEFT JOIN t_style s on pm.style_id = s.id
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{dto.companyCode}
            AND pm.create_date BETWEEN #{dto.startTime} AND #{dto.endTime}
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        GROUP BY
            DATE_FORMAT( pm.create_date, IF ( #{dto.weeklyMonth} = 'week', '%y%u', '%y%m' ) )
        ORDER BY
            year_week ASC
    </select>

    <!-- 产能对比 》打版产能 先拿到打版管理中版师id，去人员技能去找对应的人员产量多少，计算格式如下： 单位产量 除以 单位内小时数 * 一周168小时 -->
    <select id="capacityContrastCapacityStatistics" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            DATE_FORMAT( pm.create_date, IF ( #{dto.weeklyMonth} = 'week', '%y年%u周', '%y年%m月' ) ) AS year_week,
            ROUND(
                sum(
                (
                u.output /
                IF
                ( u.hours_within_unit = NULL OR u.hours_within_unit = 0, 1, u.hours_within_unit ) * 168
                )
                ),
                2
            ) as requirement_num_sum
        FROM
             (SELECT pm.* FROM t_pattern_making pm
                INNER JOIN t_node_status ns on ns.data_id = pm.id AND ns.node = #{dto.node} WHERE pm.del_flag = '0' GROUP BY pm.id) AS pm
            INNER JOIN (
            SELECT DISTINCT
                ( substring_index( substring_index( a.user_ids,',', b.help_topic_id + 1 ), ',',- 1 ) ) AS user_id,
                a.*
            FROM
                ( SELECT * FROM `t_personnel_skills` ) AS a
                JOIN mysql.help_topic AS b ON b.help_topic_id &lt;  ( char_length( a.user_ids ) - char_length( REPLACE ( a.user_ids, ',', '' ) ) + 1 )
                GROUP BY
                user_id
        ) u ON pm.pattern_design_id = u.user_id
            LEFT JOIN t_style s on pm.style_id = s.id
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{dto.companyCode}
            AND pm.create_date BETWEEN  #{dto.startTime} AND #{dto.endTime}
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        GROUP BY
            DATE_FORMAT( pm.create_date, IF ( #{dto.weeklyMonth} = 'week', '%y%u', '%y%m' ) )
        ORDER BY  year_week ASC

    </select>

    <select id="getPatternMakingSewingStatus" resultType="com.base.sbc.module.patternmaking.entity.PatternMaking">
        SELECT
        p.id,
        p.stitcher,
        p.stitcher_id,
        p.`status`,
        p.sewing_status
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id
        and p.design_send_status='1'
        and p.prm_send_status='1'
        and p.del_flag &lt;&gt; '1'
        and s.del_flag &lt;&gt; '1'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
    <select id="getProgressSteps" resultType="com.base.sbc.module.patternmaking.vo.NodeListVo">
        select ts.design_no as designNo,
        tsc.style_no as bulkStyleNo,
        SUBSTRING_INDEX(ts.designer, ',', 1) as designerName,
        tuf.url as picture,
        tpci.send_date as noNextDraftStartTime,
        ts.check_start_time as noNextDraftEndTime,
        ts.check_start_time as reviewedDraftStartTime,
        ts.check_end_time as reviewedDraftEndTime,
        ts.check_end_time as nextDraftStartTime,
        tpm.create_date as nextDraftEndTime,
        tpm.prm_send_date as punchingCompletedStartTime,

        (select tns.end_date
        from t_node_status as tns
        where tns.data_id = tpm.id
        and tns.node = '打版任务'
        and tns.status = '打版完成') as punchingCompletedEndTime,

        (select tns.start_date
        from t_node_status as tns
        where tns.data_id = tpm.id
        and tns.node = '样衣任务'
        and tns.status = '车缝进行中') as sampleClothingCompletedStartTime,

        (select tns.end_date
        from t_node_status as tns
        where tns.data_id = tpm.id
        and tns.node = '样衣任务'
        and tns.status = '车缝完成') as sampleClothingCompletedEndTime,

        (select tns.end_date
        from t_node_status as tns
        where tns.data_id = tpm.id
        and tns.node = '样衣任务'
        and tns.status = '车缝完成') as sampleSelectionStartTime,

        (select tpsr.create_date
        from t_pack_sample_review as tpsr
        where pack_type = 'packDesign'
        and tpsr.foreign_id = tpi.id
        order by tpsr.create_date desc
        limit 1) as sampleSelectionEndTime,

        null as orderBookProductionStartTime,
        null as orderBookProductionEndTime,
        null as bossStyleStartTime,
        null as bossStyleEndTime,
        null as riskAssessmentStartTime,
        null as riskAssessmentEndTime,
        null as businessEnterprisesStartTime,
        null as businessEnterprisesEndTime,

        null as sendMainFabricStartTime,
        tsc.send_main_fabric_date as sendMainFabricEndTime,

        tsc.design_detail_date as designDetailDateStartTime,
        null as designDetailDateEndTime,
        tsc.design_correct_date as designCorrectDateStartTime,
        null as designCorrectDateEndTime,
        tsc.design_correct_date as versionRoomCheckVersionStartTime,
        tsc.correct_style_date as versionRoomCheckVersionEndTime,

        null as purchaseRequestStartTime,
        null as purchaseRequestEndTime,
        null as replyDeliveryTimeStartTime,
        null as replyDeliveryTimeEndTime,
        null as surfaceAuxiliaryMaterialTestingStartTime,
        null as surfaceAuxiliaryMaterialTestingEndTime,
        null as technicalTableStartTime,
        null as technicalTableEndTime,

        null as preProductionSampleProductionStartTime,
        tpis.bulk_prod_tech_confirm_date as preProductionSampleProductionEndTime,
        (select control_confirm_time
        from t_style_pricing as tsp
        where pack_id = tpi.id
        order by tsp.create_date desc
        limit 1) as pricingStartTime,
        null as pricingEndTime,

        null as orderPlacementByAccountingControlStartTime,
        null as orderPlacementByAccountingControlEndTime

        from t_style as ts
        left join t_pattern_making as tpm on ts.id = tpm.style_id and sample_type_name = '初版样' and tpm.del_flag = '0'
        left join t_planning_category_item as tpci on tpci.id = ts.planning_category_item_id and tpci.del_flag = '0'
        left join t_style_color as tsc on ts.id = tsc.style_id and tsc.del_flag = '0'
        left join t_pack_info as tpi on tpi.style_color_id = tsc.id and tpi.del_flag = '0'
        left join t_pack_info_status as tpis on tpis.foreign_id = tpi.id and tpis.pack_type = 'packBigGoods' and
        tpis.del_flag = '0'
        left join t_upload_file as tuf on ts.style_pic = tuf.id and tuf.del_flag = '0'
        where ts.del_flag = '0'
        and ts.company_code = #{companyCode}
        <if test="year !=null and year != ''">
            and ts.year = #{year}
        </if>
        <if test="season !=null and season != ''">
            and ts.season = #{season}
        </if>
        <if test="month !=null and month != ''">
            and ts.month = #{month}
        </if>
        <if test="bandCode !=null and bandCode.length >0">
            and ts.band_code in
            <foreach collection="bandCode" item="item" open="(" separator="," close=")">
                #{item}
          </foreach>
        </if>
        <if test="designerId !=null and designerId != ''">
            and ts.designer_id like concat('%',#{designerId},'%')
        </if>
        <if test="patternDesignId !=null and patternDesignId != ''">
            and ts.pattern_design_id like concat('%',#{patternDesignId},'%')
        </if>
        <if test="devtTypeName !=null and devtTypeName != ''">
            and ts.devt_type_name = #{devtTypeName}
        </if>
        <if test="taskLevelName !=null and taskLevelName != ''">
            and ts.task_level_name like concat('%',#{taskLevelName},'%')
        </if>
        <if test="categoryName !=null and categoryName != ''">
            and ts.prod_category_name = #{categoryName}
        </if>
        <if test="search !=null and search != ''">
            and (ts.design_no like concat('%',#{search},'%') or ts.style_no like concat('%',#{search},'%'))
        </if>
        <if test="nodeName !=null and nodeName != ''">
            <if test="nodeName == 'noNextDraft'">
                and (tpci.send_date is not null or ts.check_start_time is not null)
            </if>
            <if test="nodeName == 'reviewedDraft'">
                and (ts.check_start_time is not null or ts.check_end_time is not null)
            </if>
            <if test="nodeName == 'nextDraft'">
                and (ts.check_end_time is not null or tpm.create_date is not null)
            </if>
            <if test="nodeName == 'punchingCompleted'">
                and (tpm.prm_send_date is not null or (select tns.end_date
                from t_node_status as tns
                where tns.data_id = tpm.id
                and tns.node = '打版任务'
                and tns.status = '打版完成') is not null)
            </if>
            <if test="nodeName == 'sampleClothingCompleted'">
                and ( (select tns.start_date
                from t_node_status as tns
                where tns.data_id = tpm.id
                and tns.node = '样衣任务'
                and tns.status = '车缝进行中') is not null or
                (select tns.end_date
                from t_node_status as tns
                where tns.data_id = tpm.id
                and tns.node = '样衣任务'
                and tns.status = '车缝完成') is not null)
            </if>
            <if test="nodeName == 'sampleSelection'">
                and ((select tns.end_date
                from t_node_status as tns
                where tns.data_id = tpm.id
                and tns.node = '样衣任务'
                and tns.status = '车缝完成') is not null or
                (select tpsr.create_date
                from t_pack_sample_review as tpsr
                where pack_type = 'packDesign'
                and tpsr.foreign_id = tpi.id
                order by tpsr.create_date desc
                limit 1) is not null)
            </if>
            <if test="nodeName == 'sendMainFabric'">
                and tsc.send_main_fabric_date is not null
            </if>
            <if test="nodeName == 'designDetailDate'">
                and tsc.design_detail_date is not null
            </if>
            <if test="nodeName == 'designCorrectDate'">
                and tsc.design_correct_date is not null
            </if>
            <if test="nodeName == 'versionRoomCheckVersion'">
                and (tsc.correct_style_date is not null or tsc.design_correct_date is not null)
            </if>
            <if test="nodeName == 'preProductionSampleProduction'">
                and tpis.bulk_prod_tech_confirm_date is not null
            </if>
            <if test="nodeName == 'pricing'">
                and (select control_confirm_time
                from t_style_pricing as tsp
                where pack_id = tpi.id
                order by tsp.create_date desc
                limit 1) is not null
            </if>

        </if>
    </select>
    <select id="deriveList" resultType="com.base.sbc.module.patternmaking.vo.SampleBoardExcel">

                SELECT
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '版房主管下发' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'bfzgxfsj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '已接收' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'bsjssj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '打版完成' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'zywcsj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '裁剪开始' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'cjkssj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '裁剪完成' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'cjwcsj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '车缝进行中' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'cfkssj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '车缝完成' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'cfwcsj',
        DATE_FORMAT(	SUM( CASE ns.STATUS WHEN '样衣完成' THEN  ns.start_date ELSE null END ) , '%Y-%m-%d %H:%i:%s' ) AS 'yywcsj',
        p.id AS patternMakingId,
        p.pattern_design_name,
        p.pattern_design_id,
        p.pat_diff,
        p.pat_diff_name,
        p.code AS sampleBarCode,
        p.sample_type_name,
        p.pat_seq_name,
        p.pattern_no,
        p.create_date AS `pmCreateDate`,
        p.demand_finish_date AS demandFinishDate ,
        p.technician_kitting,
        p.technician_kitting_date,
        p.sgl_kitting,
        p.sgl_kitting_date,
        p.pattern_technician_name,
        p.pattern_finish_num,
        p.sample_finish_num,
        p.sample_making_score,
        p.sample_making_quality_score,
        p.pattern_making_score,
        p.pattern_making_quality_score,
        p.second_processing,
        p.prm_send_date,
        p.prm_send_status,
        p.grading_name,
        p.grading_date,
        p.pattern_designer_name,
        p.receive_sample_date,
        s.*,
        p.cutter_name AS cutterName,
        p.stitcher AS stitcher
        FROM
        t_style s
        LEFT JOIN t_pattern_making p ON ( s.id = p.style_id and p.del_flag = '0' )
				LEFT JOIN t_node_status ns ON (ns.data_id = p.id and ns.del_flag = '0' )
        where  s.del_flag = '0'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
</mapper>

