<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.sbc.module.orderbook.mapper.OrderBookDetailMapper">
    <select id="queryPage" resultType="com.base.sbc.module.orderbook.vo.OrderBookDetailVo">
        SELECT
        tobl.*,
        tob.name as orderBookName,
        ts.id as styleId,
        ts.design_no as style,
        ts.old_design_no,
        ts.style_pic,
        ts.brand_name,
        ts.brand as brandCode,
        ts.prod_category_name as categoryName,
        ts.prod_category as categoryCode,
        ts.prod_category2nd_name,
        if(ts.brand_name ='PM',ts.positioning,null) as positioning,
        if(ts.brand_name ='PM',ts.positioning_name,null) as positioningName,
        ts.designer as styleDesignerName,
        ts.designer_id as styleDesignerId,
        ts.pattern_design_name,
        ts.registering_no,
        ts.plate_type_name as patternPositioningName,
        tsc.style_color_pic,
        tsc.style_no as bulkStyleNo,
        tsc.his_style_no as hisStyleNo,
        ts.devt_type_name,
        ts.size_codes,
        tsc.band_name,
        tsc.band_code,
        tsc.color_name,
        tsc.color_code,
        tsc.supplier_abbreviation as fobClothingFactoryName,
        tsc.supplier_no as fobClothingFactoryCode,
        tsc.supplier as fobSupplier,
        tsc.tag_price,
        tsc.bom,
        tsc.bom_status,
        tsc.scm_send_flag,
        ts.planning_season_id,
        tbcl.colour_code as supplierColor,
        tpi.id as packInfoId,
        tpi.name as bomName,
        tob.channel as channel,
        tob.channel_name as channelName,
        IFNULL(tobl.material,0) * IFNULL(tsc.tag_price,0) as materialMoney
        FROM
        t_order_book_detail tobl
        left join t_style_color tsc on tobl.style_color_id = tsc.id and tsc.del_flag='0'
        left join t_style ts on ts.id = tsc.style_id and ts.del_flag='0'
        left join t_order_book tob on tob.id = tobl.order_book_id and tob.del_flag='0'
        left join t_basicsdatum_colour_library tbcl on tbcl.colour_code = tsc.color_code and tbcl.del_flag='0'
        LEFT JOIN t_pack_info tpi ON tsc.style_no = tpi.style_no
        where tobl.del_flag='0'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>

    <select id="queryCountByOrderBookId" resultType="java.util.Map">
        SELECT
        tobl.order_book_id as orderBookId,
        count(tobl.order_book_id) as count
        FROM
        t_order_book_detail tobl
        where tobl.del_flag='0'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        group by tobl.order_book_id
    </select>

    <select id="queryStarRocks" resultType="java.util.Map">
        select T.* from (
            select
            '线下销售' resultType,
            S.PROD_CODE,
            CASE WHEN C.SALE_TYPE ='正价' THEN '是' ELSE '否' END SALE_TYPE,
            '线下' CHANNEL_TYPE,
            <if test="total == 0">
                SUM(S.JING_NUM) NUM,
                SUM(CASE WHEN SIZES = 'XXS' THEN S.JING_NUM ELSE 0 END) XXS,
                SUM(CASE WHEN SIZES = 'XS' THEN S.JING_NUM ELSE 0 END) XS,
                SUM(CASE WHEN SIZES = 'S' THEN S.JING_NUM ELSE 0 END) S,
                SUM(CASE WHEN SIZES = 'M' THEN S.JING_NUM ELSE 0 END) M,
                SUM(CASE WHEN SIZES = 'L' THEN S.JING_NUM ELSE 0 END) L,
                SUM(CASE WHEN SIZES = 'XL' THEN S.JING_NUM ELSE 0 END) XL,
                SUM(CASE WHEN SIZES = 'XXL' THEN S.JING_NUM ELSE 0 END) XXL,
            </if>
            G.BRAND_NAME
            from DM_SALE_REGENT_CHANNEL S
            INNER JOIN ODS_GOODS_NEW G ON S.PROD_CODE = G.GOODSNO
            INNER JOIN ODS_CHANNEL_NEW C ON S.CHANNEL_CODE = C.CHANNELCODE
            WHERE C.SALE_TYPE = '正价'
            <if test="total == 0 and ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY S.PROD_CODE,G.BRAND_NAME, SALE_TYPE

            UNION ALL

            SELECT
            '线上销售' resultType,
            S.PROD_CODE,
            '否' SALE_TYPE,
            '线上' CHANNEL_TYPE,
            <if test="total == 0">
                SUM(S.QUANTITY_S) NUM,
                SUM(CASE WHEN SIZES = 'XXS' THEN S.QUANTITY_S ELSE 0 END) XXS,
                SUM(CASE WHEN SIZES = 'XS' THEN S.QUANTITY_S ELSE 0 END) XS,
                SUM(CASE WHEN SIZES = 'S' THEN S.QUANTITY_S ELSE 0 END) S,
                SUM(CASE WHEN SIZES = 'M' THEN S.QUANTITY_S ELSE 0 END) M,
                SUM(CASE WHEN SIZES = 'L' THEN S.QUANTITY_S ELSE 0 END) L,
                SUM(CASE WHEN SIZES = 'XL' THEN S.QUANTITY_S ELSE 0 END) XL,
                SUM(CASE WHEN SIZES = 'XXL' THEN S.QUANTITY_S ELSE 0 END) XXL,
            </if>
            G.BRAND_NAME
            FROM DW_SO_ECS_GOODS S
            INNER JOIN ODS_GOODS_NEW G ON S.PROD_CODE = G.GOODSNO
            LEFT JOIN
            (SELECT SK.BARCODE SKU_CODE,SC.CODE SIZES,SC.SORT SIZE_ID  FROM DIM_COMMON_STYLE_SKU SK
            INNER JOIN DIM_COMMON_SKU_ATTR C ON SK.SIZE_ID =C.ID
            INNER JOIN DIM_SYS_CODE SC ON C.CODE_ID = SC.ID
            WHERE SK.DEL_FLAG =0
            )SZ
            ON SZ.SKU_CODE = CASE WHEN S.SKU_CODE LIKE '%888' THEN SUBSTRING(S.SKU_CODE,1,LENGTH(S.SKU_CODE)-3) ELSE S.SKU_CODE END
            WHERE 1 = 1
            <if test="total == 0 and ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY S.PROD_CODE,G.BRAND_NAME

            UNION ALL

            SELECT
            '线上/线下首单投产' resultType,
            S.PROD_CODE,
            '首单' ORDER_TYPE,
            S.FAC_TYPE CHANNEL_TYPE,
            <if test="total == 0">
                SUM(S.FAC_SD_QTY) NUM,
                SUM(CASE WHEN SIZES = 'XXS' THEN S.FAC_SD_QTY ELSE 0 END) XXS,
                SUM(CASE WHEN SIZES = 'XS' THEN S.FAC_SD_QTY ELSE 0 END) XS,
                SUM(CASE WHEN SIZES = 'S' THEN S.FAC_SD_QTY ELSE 0 END) S,
                SUM(CASE WHEN SIZES = 'M' THEN S.FAC_SD_QTY ELSE 0 END) M,
                SUM(CASE WHEN SIZES = 'L' THEN S.FAC_SD_QTY ELSE 0 END) L,
                SUM(CASE WHEN SIZES = 'XL' THEN S.FAC_SD_QTY ELSE 0 END) XL,
                SUM(CASE WHEN SIZES = 'XXL' THEN S.FAC_SD_QTY ELSE 0 END) XXL,
            </if>
            G.BRAND_NAME
            FROM DM_ESCM_EC_SKU S
            INNER JOIN ODS_GOODS_NEW G ON S.PROD_CODE = G.GOODSNO
            WHERE S.FAC_SD_QTY &lt;&gt;0
            <if test="total == 0 and ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY S.PROD_CODE,S.FAC_TYPE,G.BRAND_NAME

            UNION ALL
            SELECT
            '线上/线下追单投产' resultType,
            S.PROD_CODE,
            '追单' ORDER_TYPE,
            S.FAC_TYPE CHANNEL_TYPE,
            <if test="total == 0">
                SUM(S.FAC_ZD_QTY) NUM,
                SUM(CASE WHEN SIZES = 'XXS' THEN S.FAC_ZD_QTY ELSE 0 END) XXS,
                SUM(CASE WHEN SIZES = 'XS' THEN S.FAC_ZD_QTY ELSE 0 END) XS,
                SUM(CASE WHEN SIZES = 'S' THEN S.FAC_ZD_QTY ELSE 0 END) S,
                SUM(CASE WHEN SIZES = 'M' THEN S.FAC_ZD_QTY ELSE 0 END) M,
                SUM(CASE WHEN SIZES = 'L' THEN S.FAC_ZD_QTY ELSE 0 END) L,
                SUM(CASE WHEN SIZES = 'XL' THEN S.FAC_ZD_QTY ELSE 0 END) XL,
                SUM(CASE WHEN SIZES = 'XXL' THEN S.FAC_ZD_QTY ELSE 0 END) XXL,
            </if>
            G.BRAND_NAME
            FROM DM_ESCM_EC_SKU S
            INNER JOIN ODS_GOODS_NEW G ON S.PROD_CODE = G.GOODSNO
            WHERE S.FAC_ZD_QTY &lt;&gt;0
            <if test="total == 0 and ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
            GROUP BY S.PROD_CODE,S.FAC_TYPE,G.BRAND_NAME
        ) T
        <if test="total == 1">
            where 1=1
            <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
                ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
            </if>
        </if>


    </select>
</mapper>